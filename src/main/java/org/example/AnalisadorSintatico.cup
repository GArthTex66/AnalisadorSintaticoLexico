package org.example ;

import java_cup.runtime.*;

terminal PALAVRA_RESERVADA_PROGRAM, IDENTIFICADOR, PALAVRA_RESERVADA_DECLARE, PALAVRA_RESERVADA_BEGIN, PALAVRA_RESERVADA_END,
PALAVRA_RESERVADA_INTEGER, PALAVRA_RESERVADA_DECIMAL, PALAVRA_RESERVADA_IF, PALAVRA_RESERVADA_THEN, PALAVRA_RESERVADA_ELSE,
PALAVRA_RESERVADA_DO, PALAVRA_RESERVADA_WHILE, PALAVRA_RESERVADA_FOR, PALAVRA_RESERVADA_TO, PALAVRA_RESERVADA_READ,
PALAVRA_RESERVADA_WRITE, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LITERAL, OPERADOR_ASSIGN, SEMICOLON, COLON, OPERADOR_EQUAL,
OPERADOR_GREAT, OPERADOR_GREATEQUAL, OPERADOR_LESS, OPERADOR_LESSEQUAL, OPERADOR_DIFFERENT, OPERADOR_ADD, OPERADOR_MINUS,
PALAVRA_RESERVADA_OR, OPERADOR_MULT, OPERADOR_PART, PALAVRA_RESERVADA_MOD, PALAVRA_RESERVADA_AND, OPERADOR_LEFT_SHIFT,
OPERADOR_RIGHT_SHIFT, OPERADOR_UNSIGNED_RIGHT_SHIFT, OPERADOR_UNSIGNED_LEFT_SHIFT, PALAVRA_RESERVADA_NOT,COMMA, INTERROGATION, CONSTANT;

non terminal program, body, decl_list, decl, ident_list, type, stmt_list, stmt, assign_stmt, if_stmt, condition,
do_while_stmt, stmt_suffix, for_stmt, while_stmt, read_stmt, write_stmt, writable, expression, simple_expr, term,
factor_a, factor, relop, addop, mulop, shiftop;

start with program;

program ::= PALAVRA_RESERVADA_PROGRAM IDENTIFICADOR body;

body ::= PALAVRA_RESERVADA_DECLARE decl_list PALAVRA_RESERVADA_BEGIN stmt_list PALAVRA_RESERVADA_END;

decl_list ::= decl SEMICOLON | decl_list decl SEMICOLON ;

decl ::= type ident_list;

ident_list ::= IDENTIFICADOR | IDENTIFICADOR COMMA ident_list;

type ::= PALAVRA_RESERVADA_INTEGER | PALAVRA_RESERVADA_DECIMAL;

stmt_list ::= stmt SEMICOLON | stmt_list stmt SEMICOLON ;

stmt ::= assign_stmt | if_stmt | while_stmt | do_while_stmt| for_stmt | read_stmt | write_stmt;

assign_stmt ::= IDENTIFICADOR OPERADOR_ASSIGN simple_expr;

if_stmt ::= PALAVRA_RESERVADA_IF condition PALAVRA_RESERVADA_THEN stmt_list PALAVRA_RESERVADA_END | PALAVRA_RESERVADA_IF
condition PALAVRA_RESERVADA_THEN stmt_list PALAVRA_RESERVADA_ELSE stmt_list PALAVRA_RESERVADA_END;

condition ::= expression;

do_while_stmt ::= PALAVRA_RESERVADA_DO stmt_list stmt_suffix;

stmt_suffix ::= PALAVRA_RESERVADA_WHILE condition;

for_stmt ::= PALAVRA_RESERVADA_FOR assign_stmt PALAVRA_RESERVADA_TO condition PALAVRA_RESERVADA_DO stmt_list
PALAVRA_RESERVADA_END;

while_stmt ::= PALAVRA_RESERVADA_WHILE condition PALAVRA_RESERVADA_DO stmt_list PALAVRA_RESERVADA_END;

read_stmt ::= PALAVRA_RESERVADA_READ LEFT_PARENTHESIS IDENTIFICADOR RIGHT_PARENTHESIS;

write_stmt ::= PALAVRA_RESERVADA_WRITE LEFT_PARENTHESIS writable RIGHT_PARENTHESIS;

writable ::= simple_expr | LITERAL;

expression ::= simple_expr | simple_expr relop simple_expr | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS INTERROGATION simple_expr COLON simple_expr;

simple_expr ::= term | simple_expr addop term ;

term ::= factor_a | term mulop factor_a;

factor_a ::= factor | PALAVRA_RESERVADA_NOT factor | OPERADOR_MINUS factor;

factor ::= IDENTIFICADOR | CONSTANT | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS;

relop ::= OPERADOR_EQUAL | OPERADOR_GREAT | OPERADOR_GREATEQUAL | OPERADOR_LESS | OPERADOR_LESSEQUAL | OPERADOR_DIFFERENT;

addop ::= OPERADOR_ADD | OPERADOR_MINUS | PALAVRA_RESERVADA_OR;

mulop ::= OPERADOR_MULT | OPERADOR_PART | PALAVRA_RESERVADA_MOD | PALAVRA_RESERVADA_AND;

shiftop ::= OPERADOR_LEFT_SHIFT | OPERADOR_RIGHT_SHIFT | OPERADOR_UNSIGNED_RIGHT_SHIFT | OPERADOR_UNSIGNED_LEFT_SHIFT;